package net.kotlinx.core1.regex

/**
 * 자주 사용되는 정규식 모음
 * 확장함수가 가능해셔서 enum으로 만들지 않음
 * 문법 참고용으로 사용
 * */
object RegexSet {

    //==================================================== 숫자 ======================================================

    /** 숫자  */
    val NUMERIC = "\\d*".toRegex()

    /** 숫자 (소수점. 추가)   */
    var NUMERIC_DOT = "[\\d.]*".toRegex()

    //==================================================== 문자 ======================================================

    /** 알파벳+영문+완성형한글  */
    val ALPAH_NUMERIC_HAN = "[a-zA-Z\\d가-힣]*".toRegex()

    /** 알파벳+영문+완성형&비완성형한글  */
    val ALPAH_NUMERIC_HAN2 = "[a-zA-Z\\d가-힣ㄱ-ㅎㅏ-ㅣ]*".toRegex()

    /** 알파벳+영문+완성형한글+키보드특문  */
    val ALPAH_NUMERIC_HAN_PUNCT = "[a-zA-Z\\d가-힣\\p{Punct}\\s]*".toRegex()

    //==================================================== 비지니스 ======================================================

    /** 핸드폰(-없음!)  */
    val HP1 = "^01(?:0|[6-9])(?:\\d{7}|\\d{8})\$".toRegex()

    /** 핸드폰(-)  */
    val HP2 = "^01(?:0|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}\$".toRegex()

    /** url중 http://체크  */
    val URL_HTTP = "^(https?)://([^:/\\s]+)(:([^/]*))?((/[^\\s/]+)*)?/?([^#\\s?]*)(\\?([^#\\s]*))?(#(\\w*))?\$".toRegex()

    /** IP 형식 체크  */
    val IP = "^(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d\\d?|2[0-4]\\d|25[0-5])\$".toRegex()

    //==================================================== 변환 ======================================================
    /** 카멜 케이스 */
    val CAMEL = "(?<=[a-zA-Z])[A-Z]".toRegex()

    /**  스네이크 케이스 */
    val SNAKE = "_[a-zA-Z]".toRegex()

}